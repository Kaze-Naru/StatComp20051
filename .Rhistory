devtools::document()
devtools::document()
warnings()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::build()
sk <- function(x, y, n) {
m = 0
xbar <- mean(x)
ybar <- mean(y)
covbar <- mean(x * y) - xbar * ybar
for (i in 1:n)
for (j in 1:n)
m <- m + ((x[i]-xbar)*(y[j]-ybar)/covbar)^3
return(m/(6*n))
}
n <- c(10, 20, 30, 50, 100, 500) #sample sizes
cv <- qchisq(.95, 1) #crit. values for each n
p.reject <- numeric(length(n)) #to store sim. results
m <- 10000 #num. repl. each sim.
for (i in 1:length(n)) {
sktests <- numeric(m) #test decisions
for (j in 1:m) {
x <- rnorm(n[i])
y <- rnorm(n[i])
#test decision is 1 (reject) or 0
sktests[j] <- as.integer(sk(x, y, n[i]) >= cv )
}
p.reject[i] <- mean(sktests) #proportion rejected
}
rbind(n, p.reject)
sk <- function(x, y, n) {
m = 0
xbar <- mean(x)
ybar <- mean(y)
covbar <- mean(x * y) - xbar * ybar
for (i in 1:n)
for (j in 1:n)
m <- m + ((x[i]-xbar)*(y[j]-ybar)/covbar)^3
return(m/(6*n))
}
n <- c(10, 20, 30, 50, 100, 500) #sample sizes
cv <- qchisq(.95, 1) #crit. values for each n
p.reject <- numeric(length(n)) #to store sim. results
m <- 10000 #num. repl. each sim.
for (i in 1:length(n)) {
sktests <- numeric(m) #test decisions
for (j in 1:m) {
x <- rnorm(n[i])
y <- rnorm(n[i])
#test decision is 1 (reject) or 0
sktests[j] <- as.integer(sk(x, y, n[i]) >= cv )
}
p.reject[i] <- mean(sktests) #proportion rejected
}
rbind(n, p.reject)
k=c(4:25,100,500,1000)
eps <- .Machine$double.eps^0.5
root = numeric(length(k))
for (i in 1:length(k)){
root[i]=uniroot(function(a){
pt(sqrt(a^2*(k[i]-1)/(k[i]-a^2)), k[i]-1)-pt(sqrt(a^2*k[i]/(k[i]+1-a^2)),k[i])},
lower = eps, upper = 2$root
}
k=c(4:25,100,500,1000)
eps <- .Machine$double.eps^0.5
root = numeric(length(k))
for (i in 1:length(k)){
root[i]=uniroot(function(a){
pt(sqrt(a^2*(k[i]-1)/(k[i]-a^2)), k[i]-1)-pt(sqrt(a^2*k[i]/(k[i]+1-a^2)),k[i])},
lower = eps, upper = sqrt(k[i])-eps)$root
}
data.frame(k,root)
k=c(4:25,100,500,1000)
eps <- .Machine$double.eps^0.5
root = numeric(length(k))
for (i in 1:length(k)){
root[i]=uniroot(function(a){
pt(sqrt(a^2*(k[i]-1)/(k[i]-a^2)), k[i]-1)-pt(sqrt(a^2*k[i]/(k[i]+1-a^2)),k[i])},
lower = eps, upper = 2)$root
}
data.frame(k,root)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
library(Rcpp)
cppFunction ('NumericVector rwMetropolis (double sigma, double x0, int N) {
NumericVector x(N);
x[0] = x0;
NumericVector u = runif(N);
for (int i = 1; i < N;i++ ) {
NumericVector y = rnorm(1, x[i-1], sigma);
if (u[i] <= (exp(-abs(y[0]))/exp(-abs(x[i-1]))){
x[i] = y[0];
}
else {
x[i] = x[i-1];
}
}
return(x);
}
')
library(Rcpp)
library(StatComp20051)
N <- 2000
sigma <- c(.05, .5, 2, 16)
x0 <- 10
rw1 <- rwMetropolis(sigma[1], x0, N)
rwMetropolis(0.05,10,100)
library(Rcpp)
library(StatComp20051)
N <- 2000
sigma <- c(.05, .5, 2, 16)
x0 <- 10
rw1 <- rwMetropolis(sigma[1], x0, N)
devtools::document()
devtools::document()
devtools::check()
rwMetropolis()
rwMetropolis
Rcpp::sourceCpp('src/rwMetropolis.cpp')
library(Rcpp)
library(StatComp20051)
N <- 2000
sigma <- c(.05, .5, 2, 16)
x0 <- 10
rw1 <- rwMetropolis(sigma[1], x0, N)
rw2 <- rwMetropolis(sigma[2], x0, N)
rw3 <- rwMetropolis(sigma[3], x0, N)
rw4 <- rwMetropolis(sigma[4], x0, N)
print(c(rw1[N+1], rw2[N+1], rw3[N+1], rw4[N+1]))
rw1
library(Rcpp)
library(StatComp20051)
N <- 100
sigma <- c(.05, .5, 2, 16)
x0 <- 10
rw1 <- rwMetropolis(sigma[1], x0, N)
rw2 <- rwMetropolis(sigma[2], x0, N)
rw3 <- rwMetropolis(sigma[3], x0, N)
rw4 <- rwMetropolis(sigma[4], x0, N)
print(c(rw1[N+1], rw2[N+1], rw3[N+1], rw4[N+1]))
rw1
rw1[100]
library(Rcpp)
library(StatComp20051)
N <- 100
sigma <- c(.05, .5, 2, 16)
x0 <- 10
rw1 <- rwMetropolis(sigma[1], x0, N)
rw2 <- rwMetropolis(sigma[2], x0, N)
rw3 <- rwMetropolis(sigma[3], x0, N)
rw4 <- rwMetropolis(sigma[4], x0, N)
print(c(rw1[N+1], rw2[N+1], rw3[N+1], rw4[N+1]))
devtools::document()
devtools::document()
rm(list = c("rwMetropolis"))
devtools::document()
library(Rcpp)
library(StatComp20051)
N <- 100
sigma <- c(.05, .5, 2, 16)
x0 <- 10
rw1 <- rwMetropolis(sigma[1], x0, N)
devtools::document()
devtools::document()
library(Rcpp)
library(StatComp20051)
N <- 100
sigma <- c(.05, .5, 2, 16)
x0 <- 10
rw1 <- rwMetropolis(sigma[1], x0, N)
library(Rcpp)
library(StatComp20051)
N <- 100
sigma <- c(.05, .5, 2, 16)
x0 <- 10
rw1 <- rwMetropolis(sigma[1], x0, N)
library(Rcpp)
library(StatComp20051)
N <- 100
sigma <- c(.05, .5, 2, 16)
x0 <- 10
rw1 <- rwMetropolis(sigma[1], x0, N)
Rcpp::sourceCpp('src/rwMetropolis.cpp')
rwMetropolis()
rwMetropolis
library(StatComp20051)
rwMetropolis
devtools::check()
rwMetropolis
library(Rcpp)
library(StatComp20051)
devtools::document()
rm(list = c("rwMetropolis"))
devtools::document()
library(Rcpp)
library(StatComp20051)
N <- 2000
sigma <- c(.05, .5, 2, 16)
x0 <- 10
rw1 <- rwMetropolis(sigma[1], x0, N)
rwMetropolis
library(StatComp20051)
rwMetropolis(2,25,2000)
devtools::document()
rwMetropolis
library(Rcpp)
library(StatComp20051)
N <- 2000
#sigma <- c(.05, .5, 2, 16)
sigma <- 2
x0 <- 10
rw1 <- rwMetropolis(sigma[1], x0, N)
devtools::document()
library(Rcpp)
library(StatComp20051)
N <- 2000
#sigma <- c(.05, .5, 2, 16)
sigma <- 2
x0 <- 10
rw1 <- rwMetropolis(sigma[1], x0, N)
library(Rcpp)
library(StatComp20051)
N <- 2000
#sigma <- c(.05, .5, 2, 16)
sigma <- 2
x0 <- 10
rw1 <- rwMetropolis(sigma, x0, N)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(Rcpp)
library(StatComp20051)
N <- 2000
#sigma <- c(.05, .5, 2, 16)
sigma <- 2
x0 <- 10
rw1 <- rwMetropolis(sigma, x0, N)
#rw2 <- rwMetropolis(sigma[2], x0, N)
#rw3 <- rwMetropolis(sigma[3], x0, N)
#rw4 <- rwMetropolis(sigma[4], x0, N)
#print(c(rw1[N+1], rw2[N+1], rw3[N+1], rw4[N+1]))
rw1
devtools::document()
devtools::document()
library(Rcpp)
library(StatComp20051)
N <- 2000
#sigma <- c(.05, .5, 2, 16)
sigma <- 2
x0 <- 10
rw1 <- rwMetropolis(sigma, x0, N)
#rw2 <- rwMetropolis(sigma[2], x0, N)
#rw3 <- rwMetropolis(sigma[3], x0, N)
#rw4 <- rwMetropolis(sigma[4], x0, N)
#print(c(rw1[N+1], rw2[N+1], rw3[N+1], rw4[N+1]))
library(Rcpp)
library(StatComp20051)
N <- 2000
sigma <- c(.05, .5, 2, 16)
#sigma <- 2
x0 <- 10
rw1 <- rwMetropolis(sigma[1], x0, N)
#rw2 <- rwMetropolis(sigma[2], x0, N)
#rw3 <- rwMetropolis(sigma[3], x0, N)
#rw4 <- rwMetropolis(sigma[4], x0, N)
#print(c(rw1[N+1], rw2[N+1], rw3[N+1], rw4[N+1]))
#rw4 <- rwMetropolis(sigma[4], x0, N)
rw1
rw1[2001]
library(Rcpp)
library(StatComp20051)
N <- 2000
sigma <- c(.05, .5, 2, 16)
x0 <- 10
rw1 <- rwMetropolis(sigma, x0, N)
library(Rcpp)
library(StatComp20051)
N <- 2000
sigma <- c(.05, .5, 2, 16)
x0 <- 10
rw1 <- rwMetropolis(sigma[1], x0, N)
rw2 <- rwMetropolis(sigma[2], x0, N)
rw3 <- rwMetropolis(sigma[3], x0, N)
rw4 <- rwMetropolis(sigma[4], x0, N)
print(c(rw1[N+1], rw2[N+1], rw3[N+1], rw4[N+1]))
devtools::document()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools
devtools::document()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::check()
devtools::document()
devtools::check()
install.packages('../StatComp20051_1.0.tar.gz',repo=NULL)
devtools::build()
install.packages('../StatComp20051_1.0.tar.gz',repo=NULL)
